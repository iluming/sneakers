<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhc.sneakers.dao.InputApplyMapper">
    <resultMap id="InputApplyMapper" type="com.lhc.sneakers.entity.InputApply">
        <id column="input_id" property="inputId"/>
        <result property="sneakersId" column="sneakers_id"/>
        <result property="color" column="color"/>
        <result property="size" column="size"/>
        <result property="num" column="num"/>
        <result property="numUnit" column="num_unit"/>
        <result property="applyTime" column="apply_time"/>
        <result property="price" column="price"/>
        <result property="totalPrice" column="total_price"/>
        <result property="netWeight" column="net_weight"/>
        <result property="invoiceNumber" column="invoice_number"/>
        <result property="applicantId" column="applicant_id"/>
        <result property="supplierId" column="supplier_id"/>
        <result property="position" column="position"/>
        <result property="status" column="status"/>
    </resultMap>

    <select id="listInputApply"  parameterType="int" resultMap="InputApplyMapper">
    SELECT
	ui.user_name AS applicant,
	uii.user_name AS supplier,
	s.sneakers_name,
	ia.*
    FROM
	`input_apply` ia
	LEFT JOIN sneakers s ON s.sneakers_id = ia.sneakers_id
	LEFT JOIN user_info ui ON ui.user_id = ia.applicant_id
	LEFT JOIN user_info uii ON uii.user_id = ia.supplier_id
    <trim prefix="where" prefixOverrides="and | or">
        <if test="code == 1 ">
            and (ia.`status` = '待审核' or ia.`status` = '已退回') and ia.applicant_id = #{applicantId}
        </if>
        <if test="code == 2 ">
            and ia.`status` = '待审核'
        </if>
        <if test="code == 3">
            and  ia.`status` = '已确认'
        </if>
    </trim>

    ORDER BY
	ia.input_id DESC
    </select>

   <insert id="addInputApply" parameterType="com.lhc.sneakers.entity.InputApply" useGeneratedKeys="true" keyColumn="inputId">
INSERT INTO `input_apply` ( `sneakers_id`, `color`, `size`, `num`, `num_unit`, `apply_time`, `price`,
`total_price`, `net_weight`, `invoice_number`, `applicant_id`, `supplier_id`, `position` ,`status`)
VALUES
	(#{sneakersId}, #{color}, #{size}, #{num}, #{numUnit}, #{applyTime}, #{price}, #{totalPrice},
	#{netWeight}, #{invoiceNumber}, #{applicantId}, #{supplierId}, #{position} ,#{status});
   </insert>

    <select id="yesInputApply" resultMap="InputApplyMapper" parameterType="map">
        SELECT s.sneakers_name,ia.*,SUM(ia.num) AS sum_num FROM `input_apply` ia
        LEFT JOIN sneakers s on s.sneakers_id = ia.sneakers_id
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="startTime != null">
                AND ia.apply_time  <![CDATA[>=]]> #{startTime}
                AND ia.apply_time  <![CDATA[<=]]> #{endTime}
            </if>
            AND ia.`status` = '已确认' GROUP BY ia.sneakers_id
        </trim>
    </select>

    <select id="sumInputApply" resultMap="InputApplyMapper" parameterType="map">
        SELECT SUM(ia.num) AS sum_num FROM `input_apply` ia
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="startTime != null">
                AND ia.apply_time  <![CDATA[>=]]> #{startTime}
                AND ia.apply_time  <![CDATA[<=]]> #{endTime}
            </if>
            AND ia.`status` = '已确认' GROUP BY ia.sneakers_id
        </trim>
    </select>

    <update id="updateInputApply" parameterType="com.lhc.sneakers.entity.InputApply" useGeneratedKeys="true" keyColumn="inputId">
        UPDATE `input_apply` SET  `supplier_id` = #{supplierId}, `sneakers_id` = #{sneakersId},
        `color` = #{color}, `size` = #{size}, `num` = #{num}, `num_unit` = #{numUnit}, `apply_time` = #{applyTime},
        `price` = #{price}, `total_price` = #{totalPrice}, `net_weight` = #{netWeight}, `invoice_number` = #{invoiceNumber},
        `position` = #{position}, `status` = #{status} WHERE `input_id` = #{inputId};
    </update>

    <delete id="deleteInputApply" parameterType="int" >
        delete from input_apply where input_id = #{inputApplyId};
    </delete>

    <update id="updateInputStatus" parameterType="map" useGeneratedKeys="true" keyColumn="inputId">
         UPDATE `input_apply` SET  `status` = #{status} WHERE `input_id` = #{inputApplyId};
    </update>

</mapper>